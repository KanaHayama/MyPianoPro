|MyPianoPro
CLK => CLK.IN1
BTNRST => RST.IN5
BTNEN => EN.IN5
WAVE[0] <= MusicUnit:comb_6.WAVE
WAVE[1] <= MusicUnit:comb_7.WAVE
WAVE[2] <= MusicUnit:comb_8.WAVE
WAVE[3] <= MusicUnit:comb_9.WAVE
WAVE[4] <= MusicUnit:comb_10.WAVE
COM4[0] <= BCD4Sweeper:comb_12.COM
COM4[1] <= BCD4Sweeper:comb_12.COM
COM4[2] <= BCD4Sweeper:comb_12.COM
COM4[3] <= BCD4Sweeper:comb_12.COM
LED4[0] <= BCD2LED:comb_13.LED
LED4[1] <= BCD2LED:comb_13.LED
LED4[2] <= BCD2LED:comb_13.LED
LED4[3] <= BCD2LED:comb_13.LED
LED4[4] <= BCD2LED:comb_13.LED
LED4[5] <= BCD2LED:comb_13.LED
LED4[6] <= BCD2LED:comb_13.LED
LED1[0] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[1] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[2] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[3] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[4] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[5] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[6] <= LED1.DB_MAX_OUTPUT_PORT_TYPE
LED1[7] <= LED1.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|FreqChange:comb_5
clk_in => clk.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_in => counter[30].CLK
clk_in => counter[31].CLK
clk_out <= clk.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6
CLK => CLK.IN3
RST => RST.IN1
EN => EN.IN1
PLAYING <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
TONE[0] <= TONE[0].DB_MAX_OUTPUT_PORT_TYPE
TONE[1] <= TONE[1].DB_MAX_OUTPUT_PORT_TYPE
TONE[2] <= TONE[2].DB_MAX_OUTPUT_PORT_TYPE
TONE[3] <= TONE[3].DB_MAX_OUTPUT_PORT_TYPE
TONE[4] <= TONE[4].DB_MAX_OUTPUT_PORT_TYPE
TONE[5] <= TONE[5].DB_MAX_OUTPUT_PORT_TYPE
TONE[6] <= TONE[6].DB_MAX_OUTPUT_PORT_TYPE
WAVE <= MusicPlayer:comb_3.Wave
BCD1[0] <= BCDSpliter:comb_6.O1
BCD1[1] <= BCDSpliter:comb_6.O1
BCD1[2] <= BCDSpliter:comb_6.O1
BCD1[3] <= BCDSpliter:comb_6.O1
BCD0[0] <= BCDSpliter:comb_6.O0
BCD0[1] <= BCDSpliter:comb_6.O0
BCD0[2] <= BCDSpliter:comb_6.O0
BCD0[3] <= BCDSpliter:comb_6.O0


|MyPianoPro|MusicUnit:comb_6|MusicPlayer:comb_3
CLK => CLK.IN2
RST => RST.IN2
EN => EN.IN1
RomAddr[0] <= ToneGenerator:tg.addr
RomAddr[1] <= ToneGenerator:tg.addr
RomAddr[2] <= ToneGenerator:tg.addr
RomAddr[3] <= ToneGenerator:tg.addr
RomAddr[4] <= ToneGenerator:tg.addr
RomAddr[5] <= ToneGenerator:tg.addr
RomAddr[6] <= ToneGenerator:tg.addr
RomAddr[7] <= ToneGenerator:tg.addr
RomAddr[8] <= ToneGenerator:tg.addr
RomAddr[9] <= ToneGenerator:tg.addr
RomTone[0] => RomTone[0].IN1
RomTone[1] => RomTone[1].IN1
RomTone[2] => RomTone[2].IN1
RomTone[3] => RomTone[3].IN1
RomTone[4] => RomTone[4].IN1
RomTone[5] => RomTone[5].IN1
RomTone[6] => RomTone[6].IN1
RomNote[0] => RomNote[0].IN1
RomNote[1] => RomNote[1].IN1
RomNote[2] => RomNote[2].IN1
RomNote[3] => RomNote[3].IN1
RomNote[4] => RomNote[4].IN1
RomNote[5] => RomNote[5].IN1
RomNote[6] => RomNote[6].IN1
Tone[0] <= Tone[0].DB_MAX_OUTPUT_PORT_TYPE
Tone[1] <= Tone[1].DB_MAX_OUTPUT_PORT_TYPE
Tone[2] <= Tone[2].DB_MAX_OUTPUT_PORT_TYPE
Tone[3] <= Tone[3].DB_MAX_OUTPUT_PORT_TYPE
Tone[4] <= Tone[4].DB_MAX_OUTPUT_PORT_TYPE
Tone[5] <= Tone[5].DB_MAX_OUTPUT_PORT_TYPE
Tone[6] <= Tone[6].DB_MAX_OUTPUT_PORT_TYPE
Wave <= WaveGenerator:wg.wave


|MyPianoPro|MusicUnit:comb_6|MusicPlayer:comb_3|ToneGenerator:tg
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
clk => addr[8]~reg0.CLK
clk => addr[9]~reg0.CLK
clk => addr_add.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
rst => addr[8]~reg0.ACLR
rst => addr[9]~reg0.ACLR
rst => addr_add.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
note[0] => Add0.IN14
note[1] => Add0.IN13
note[2] => Add0.IN12
note[3] => Add0.IN11
note[4] => Add0.IN10
note[5] => Add0.IN9
note[6] => Add0.IN8
tone_original[0] => tone.DATAB
tone_original[1] => tone.DATAB
tone_original[2] => tone.DATAB
tone_original[3] => tone.DATAB
tone_original[4] => tone.DATAB
tone_original[5] => tone.DATAB
tone_original[6] => tone.DATAB
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[3] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[4] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[5] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[6] <= tone.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6|MusicPlayer:comb_3|WaveGenerator:wg
clk => level.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => level.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
en => wave.IN1
tone[0] => Decoder0.IN6
tone[1] => Decoder0.IN5
tone[2] => Decoder0.IN4
tone[3] => Decoder0.IN3
tone[4] => Decoder0.IN2
tone[5] => Decoder0.IN1
tone[6] => Decoder0.IN0
wave <= wave.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6|ROM:comb_4
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_6|ROM:comb_4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_ds91:auto_generated.address_a[0]
address_a[1] => altsyncram_ds91:auto_generated.address_a[1]
address_a[2] => altsyncram_ds91:auto_generated.address_a[2]
address_a[3] => altsyncram_ds91:auto_generated.address_a[3]
address_a[4] => altsyncram_ds91:auto_generated.address_a[4]
address_a[5] => altsyncram_ds91:auto_generated.address_a[5]
address_a[6] => altsyncram_ds91:auto_generated.address_a[6]
address_a[7] => altsyncram_ds91:auto_generated.address_a[7]
address_a[8] => altsyncram_ds91:auto_generated.address_a[8]
address_a[9] => altsyncram_ds91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_ds91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_ds91:auto_generated.q_a[0]
q_a[1] <= altsyncram_ds91:auto_generated.q_a[1]
q_a[2] <= altsyncram_ds91:auto_generated.q_a[2]
q_a[3] <= altsyncram_ds91:auto_generated.q_a[3]
q_a[4] <= altsyncram_ds91:auto_generated.q_a[4]
q_a[5] <= altsyncram_ds91:auto_generated.q_a[5]
q_a[6] <= altsyncram_ds91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_6|ROM:comb_4|altsyncram:altsyncram_component|altsyncram_ds91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_6|ROM:comb_5
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_6|ROM:comb_5|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_es91:auto_generated.address_a[0]
address_a[1] => altsyncram_es91:auto_generated.address_a[1]
address_a[2] => altsyncram_es91:auto_generated.address_a[2]
address_a[3] => altsyncram_es91:auto_generated.address_a[3]
address_a[4] => altsyncram_es91:auto_generated.address_a[4]
address_a[5] => altsyncram_es91:auto_generated.address_a[5]
address_a[6] => altsyncram_es91:auto_generated.address_a[6]
address_a[7] => altsyncram_es91:auto_generated.address_a[7]
address_a[8] => altsyncram_es91:auto_generated.address_a[8]
address_a[9] => altsyncram_es91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_es91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_es91:auto_generated.q_a[0]
q_a[1] <= altsyncram_es91:auto_generated.q_a[1]
q_a[2] <= altsyncram_es91:auto_generated.q_a[2]
q_a[3] <= altsyncram_es91:auto_generated.q_a[3]
q_a[4] <= altsyncram_es91:auto_generated.q_a[4]
q_a[5] <= altsyncram_es91:auto_generated.q_a[5]
q_a[6] <= altsyncram_es91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_6|ROM:comb_5|altsyncram:altsyncram_component|altsyncram_es91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
O1[0] <= DIV:comb_3.quotient
O1[1] <= DIV:comb_3.quotient
O1[2] <= DIV:comb_3.quotient
O1[3] <= DIV:comb_3.quotient
O0[0] <= DIV:comb_3.remain
O0[1] <= DIV:comb_3.remain
O0[2] <= DIV:comb_3.remain
O0[3] <= DIV:comb_3.remain


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3
denom[0] => denom[0].IN1
denom[1] => denom[1].IN1
denom[2] => denom[2].IN1
denom[3] => denom[3].IN1
numer[0] => numer[0].IN1
numer[1] => numer[1].IN1
numer[2] => numer[2].IN1
numer[3] => numer[3].IN1
numer[4] => numer[4].IN1
numer[5] => numer[5].IN1
numer[6] => numer[6].IN1
quotient[0] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[1] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[2] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[3] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[4] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[5] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[6] <= lpm_divide:LPM_DIVIDE_component.quotient
remain[0] <= lpm_divide:LPM_DIVIDE_component.remain
remain[1] <= lpm_divide:LPM_DIVIDE_component.remain
remain[2] <= lpm_divide:LPM_DIVIDE_component.remain
remain[3] <= lpm_divide:LPM_DIVIDE_component.remain


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component
numer[0] => lpm_divide_8os:auto_generated.numer[0]
numer[1] => lpm_divide_8os:auto_generated.numer[1]
numer[2] => lpm_divide_8os:auto_generated.numer[2]
numer[3] => lpm_divide_8os:auto_generated.numer[3]
numer[4] => lpm_divide_8os:auto_generated.numer[4]
numer[5] => lpm_divide_8os:auto_generated.numer[5]
numer[6] => lpm_divide_8os:auto_generated.numer[6]
denom[0] => lpm_divide_8os:auto_generated.denom[0]
denom[1] => lpm_divide_8os:auto_generated.denom[1]
denom[2] => lpm_divide_8os:auto_generated.denom[2]
denom[3] => lpm_divide_8os:auto_generated.denom[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_8os:auto_generated.quotient[0]
quotient[1] <= lpm_divide_8os:auto_generated.quotient[1]
quotient[2] <= lpm_divide_8os:auto_generated.quotient[2]
quotient[3] <= lpm_divide_8os:auto_generated.quotient[3]
quotient[4] <= lpm_divide_8os:auto_generated.quotient[4]
quotient[5] <= lpm_divide_8os:auto_generated.quotient[5]
quotient[6] <= lpm_divide_8os:auto_generated.quotient[6]
remain[0] <= lpm_divide_8os:auto_generated.remain[0]
remain[1] <= lpm_divide_8os:auto_generated.remain[1]
remain[2] <= lpm_divide_8os:auto_generated.remain[2]
remain[3] <= lpm_divide_8os:auto_generated.remain[3]


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
denom[0] => sign_div_unsign_akh:divider.denominator[0]
denom[1] => sign_div_unsign_akh:divider.denominator[1]
denom[2] => sign_div_unsign_akh:divider.denominator[2]
denom[3] => sign_div_unsign_akh:divider.denominator[3]
numer[0] => sign_div_unsign_akh:divider.numerator[0]
numer[1] => sign_div_unsign_akh:divider.numerator[1]
numer[2] => sign_div_unsign_akh:divider.numerator[2]
numer[3] => sign_div_unsign_akh:divider.numerator[3]
numer[4] => sign_div_unsign_akh:divider.numerator[4]
numer[5] => sign_div_unsign_akh:divider.numerator[5]
numer[6] => sign_div_unsign_akh:divider.numerator[6]
quotient[0] <= sign_div_unsign_akh:divider.quotient[0]
quotient[1] <= sign_div_unsign_akh:divider.quotient[1]
quotient[2] <= sign_div_unsign_akh:divider.quotient[2]
quotient[3] <= sign_div_unsign_akh:divider.quotient[3]
quotient[4] <= sign_div_unsign_akh:divider.quotient[4]
quotient[5] <= sign_div_unsign_akh:divider.quotient[5]
quotient[6] <= sign_div_unsign_akh:divider.quotient[6]
remain[0] <= sign_div_unsign_akh:divider.remainder[0]
remain[1] <= sign_div_unsign_akh:divider.remainder[1]
remain[2] <= sign_div_unsign_akh:divider.remainder[2]
remain[3] <= sign_div_unsign_akh:divider.remainder[3]


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider
denominator[0] => alt_u_div_84f:divider.denominator[0]
denominator[1] => alt_u_div_84f:divider.denominator[1]
denominator[2] => alt_u_div_84f:divider.denominator[2]
denominator[3] => alt_u_div_84f:divider.denominator[3]
numerator[0] => alt_u_div_84f:divider.numerator[0]
numerator[1] => alt_u_div_84f:divider.numerator[1]
numerator[2] => alt_u_div_84f:divider.numerator[2]
numerator[3] => alt_u_div_84f:divider.numerator[3]
numerator[4] => alt_u_div_84f:divider.numerator[4]
numerator[5] => alt_u_div_84f:divider.numerator[5]
numerator[6] => alt_u_div_84f:divider.numerator[6]
quotient[0] <= protect_quotient[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= protect_quotient[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= protect_quotient[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= protect_quotient[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= protect_quotient[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= protect_quotient[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= protect_quotient[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= protect_remainder[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= protect_remainder[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= protect_remainder[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= protect_remainder[3].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider
denominator[0] => add_sub_7pc:add_sub_0.datab[0]
denominator[0] => add_sub_8pc:add_sub_1.datab[0]
denominator[0] => op_1.IN8
denominator[0] => op_2.IN10
denominator[0] => op_3.IN12
denominator[0] => op_4.IN12
denominator[0] => op_5.IN12
denominator[1] => sel[0].IN1
denominator[1] => add_sub_8pc:add_sub_1.datab[1]
denominator[1] => sel[4].IN1
denominator[1] => sel[8].IN1
denominator[1] => op_1.IN6
denominator[1] => sel[12].IN1
denominator[1] => op_2.IN8
denominator[1] => sel[16].IN1
denominator[1] => op_3.IN10
denominator[1] => sel[20].IN1
denominator[1] => op_4.IN10
denominator[1] => sel[24].IN1
denominator[1] => op_5.IN10
denominator[1] => sel[28].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[5].IN1
denominator[2] => sel[9].IN1
denominator[2] => op_1.IN4
denominator[2] => sel[13].IN1
denominator[2] => op_2.IN6
denominator[2] => sel[17].IN1
denominator[2] => op_3.IN8
denominator[2] => sel[21].IN1
denominator[2] => op_4.IN8
denominator[2] => sel[25].IN1
denominator[2] => op_5.IN8
denominator[2] => sel[29].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[6].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[14].IN1
denominator[3] => op_2.IN4
denominator[3] => sel[18].IN1
denominator[3] => op_3.IN6
denominator[3] => sel[22].IN1
denominator[3] => op_4.IN6
denominator[3] => sel[26].IN1
denominator[3] => op_5.IN6
denominator[3] => sel[30].IN1
numerator[0] => StageOut[30].IN0
numerator[0] => op_5.IN11
numerator[1] => StageOut[25].IN0
numerator[1] => op_4.IN11
numerator[2] => StageOut[20].IN0
numerator[2] => op_3.IN11
numerator[3] => StageOut[15].IN0
numerator[3] => op_2.IN9
numerator[4] => StageOut[10].IN0
numerator[4] => op_1.IN7
numerator[5] => add_sub_8pc:add_sub_1.dataa[0]
numerator[5] => StageOut[5].IN0
numerator[6] => add_sub_7pc:add_sub_0.dataa[0]
numerator[6] => StageOut[0].IN0
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[30].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[31].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[32].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[33].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_7pc:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_6|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_8pc:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
dataa[1] => carry_eqn[1].IN0
dataa[1] => _.IN0
dataa[1] => sum_eqn[1].IN0
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7
CLK => CLK.IN3
RST => RST.IN1
EN => EN.IN1
PLAYING <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
TONE[0] <= TONE[0].DB_MAX_OUTPUT_PORT_TYPE
TONE[1] <= TONE[1].DB_MAX_OUTPUT_PORT_TYPE
TONE[2] <= TONE[2].DB_MAX_OUTPUT_PORT_TYPE
TONE[3] <= TONE[3].DB_MAX_OUTPUT_PORT_TYPE
TONE[4] <= TONE[4].DB_MAX_OUTPUT_PORT_TYPE
TONE[5] <= TONE[5].DB_MAX_OUTPUT_PORT_TYPE
TONE[6] <= TONE[6].DB_MAX_OUTPUT_PORT_TYPE
WAVE <= MusicPlayer:comb_3.Wave
BCD1[0] <= BCDSpliter:comb_6.O1
BCD1[1] <= BCDSpliter:comb_6.O1
BCD1[2] <= BCDSpliter:comb_6.O1
BCD1[3] <= BCDSpliter:comb_6.O1
BCD0[0] <= BCDSpliter:comb_6.O0
BCD0[1] <= BCDSpliter:comb_6.O0
BCD0[2] <= BCDSpliter:comb_6.O0
BCD0[3] <= BCDSpliter:comb_6.O0


|MyPianoPro|MusicUnit:comb_7|MusicPlayer:comb_3
CLK => CLK.IN2
RST => RST.IN2
EN => EN.IN1
RomAddr[0] <= ToneGenerator:tg.addr
RomAddr[1] <= ToneGenerator:tg.addr
RomAddr[2] <= ToneGenerator:tg.addr
RomAddr[3] <= ToneGenerator:tg.addr
RomAddr[4] <= ToneGenerator:tg.addr
RomAddr[5] <= ToneGenerator:tg.addr
RomAddr[6] <= ToneGenerator:tg.addr
RomAddr[7] <= ToneGenerator:tg.addr
RomAddr[8] <= ToneGenerator:tg.addr
RomAddr[9] <= ToneGenerator:tg.addr
RomTone[0] => RomTone[0].IN1
RomTone[1] => RomTone[1].IN1
RomTone[2] => RomTone[2].IN1
RomTone[3] => RomTone[3].IN1
RomTone[4] => RomTone[4].IN1
RomTone[5] => RomTone[5].IN1
RomTone[6] => RomTone[6].IN1
RomNote[0] => RomNote[0].IN1
RomNote[1] => RomNote[1].IN1
RomNote[2] => RomNote[2].IN1
RomNote[3] => RomNote[3].IN1
RomNote[4] => RomNote[4].IN1
RomNote[5] => RomNote[5].IN1
RomNote[6] => RomNote[6].IN1
Tone[0] <= Tone[0].DB_MAX_OUTPUT_PORT_TYPE
Tone[1] <= Tone[1].DB_MAX_OUTPUT_PORT_TYPE
Tone[2] <= Tone[2].DB_MAX_OUTPUT_PORT_TYPE
Tone[3] <= Tone[3].DB_MAX_OUTPUT_PORT_TYPE
Tone[4] <= Tone[4].DB_MAX_OUTPUT_PORT_TYPE
Tone[5] <= Tone[5].DB_MAX_OUTPUT_PORT_TYPE
Tone[6] <= Tone[6].DB_MAX_OUTPUT_PORT_TYPE
Wave <= WaveGenerator:wg.wave


|MyPianoPro|MusicUnit:comb_7|MusicPlayer:comb_3|ToneGenerator:tg
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
clk => addr[8]~reg0.CLK
clk => addr[9]~reg0.CLK
clk => addr_add.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
rst => addr[8]~reg0.ACLR
rst => addr[9]~reg0.ACLR
rst => addr_add.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
note[0] => Add0.IN14
note[1] => Add0.IN13
note[2] => Add0.IN12
note[3] => Add0.IN11
note[4] => Add0.IN10
note[5] => Add0.IN9
note[6] => Add0.IN8
tone_original[0] => tone.DATAB
tone_original[1] => tone.DATAB
tone_original[2] => tone.DATAB
tone_original[3] => tone.DATAB
tone_original[4] => tone.DATAB
tone_original[5] => tone.DATAB
tone_original[6] => tone.DATAB
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[3] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[4] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[5] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[6] <= tone.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7|MusicPlayer:comb_3|WaveGenerator:wg
clk => level.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => level.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
en => wave.IN1
tone[0] => Decoder0.IN6
tone[1] => Decoder0.IN5
tone[2] => Decoder0.IN4
tone[3] => Decoder0.IN3
tone[4] => Decoder0.IN2
tone[5] => Decoder0.IN1
tone[6] => Decoder0.IN0
wave <= wave.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7|ROM:comb_4
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_7|ROM:comb_4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_fs91:auto_generated.address_a[0]
address_a[1] => altsyncram_fs91:auto_generated.address_a[1]
address_a[2] => altsyncram_fs91:auto_generated.address_a[2]
address_a[3] => altsyncram_fs91:auto_generated.address_a[3]
address_a[4] => altsyncram_fs91:auto_generated.address_a[4]
address_a[5] => altsyncram_fs91:auto_generated.address_a[5]
address_a[6] => altsyncram_fs91:auto_generated.address_a[6]
address_a[7] => altsyncram_fs91:auto_generated.address_a[7]
address_a[8] => altsyncram_fs91:auto_generated.address_a[8]
address_a[9] => altsyncram_fs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_fs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_fs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_fs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_fs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_fs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_fs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_fs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_fs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_7|ROM:comb_4|altsyncram:altsyncram_component|altsyncram_fs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_7|ROM:comb_5
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_7|ROM:comb_5|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_gs91:auto_generated.address_a[0]
address_a[1] => altsyncram_gs91:auto_generated.address_a[1]
address_a[2] => altsyncram_gs91:auto_generated.address_a[2]
address_a[3] => altsyncram_gs91:auto_generated.address_a[3]
address_a[4] => altsyncram_gs91:auto_generated.address_a[4]
address_a[5] => altsyncram_gs91:auto_generated.address_a[5]
address_a[6] => altsyncram_gs91:auto_generated.address_a[6]
address_a[7] => altsyncram_gs91:auto_generated.address_a[7]
address_a[8] => altsyncram_gs91:auto_generated.address_a[8]
address_a[9] => altsyncram_gs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_gs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_gs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_gs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_gs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_gs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_gs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_gs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_gs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_7|ROM:comb_5|altsyncram:altsyncram_component|altsyncram_gs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
O1[0] <= DIV:comb_3.quotient
O1[1] <= DIV:comb_3.quotient
O1[2] <= DIV:comb_3.quotient
O1[3] <= DIV:comb_3.quotient
O0[0] <= DIV:comb_3.remain
O0[1] <= DIV:comb_3.remain
O0[2] <= DIV:comb_3.remain
O0[3] <= DIV:comb_3.remain


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3
denom[0] => denom[0].IN1
denom[1] => denom[1].IN1
denom[2] => denom[2].IN1
denom[3] => denom[3].IN1
numer[0] => numer[0].IN1
numer[1] => numer[1].IN1
numer[2] => numer[2].IN1
numer[3] => numer[3].IN1
numer[4] => numer[4].IN1
numer[5] => numer[5].IN1
numer[6] => numer[6].IN1
quotient[0] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[1] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[2] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[3] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[4] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[5] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[6] <= lpm_divide:LPM_DIVIDE_component.quotient
remain[0] <= lpm_divide:LPM_DIVIDE_component.remain
remain[1] <= lpm_divide:LPM_DIVIDE_component.remain
remain[2] <= lpm_divide:LPM_DIVIDE_component.remain
remain[3] <= lpm_divide:LPM_DIVIDE_component.remain


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component
numer[0] => lpm_divide_8os:auto_generated.numer[0]
numer[1] => lpm_divide_8os:auto_generated.numer[1]
numer[2] => lpm_divide_8os:auto_generated.numer[2]
numer[3] => lpm_divide_8os:auto_generated.numer[3]
numer[4] => lpm_divide_8os:auto_generated.numer[4]
numer[5] => lpm_divide_8os:auto_generated.numer[5]
numer[6] => lpm_divide_8os:auto_generated.numer[6]
denom[0] => lpm_divide_8os:auto_generated.denom[0]
denom[1] => lpm_divide_8os:auto_generated.denom[1]
denom[2] => lpm_divide_8os:auto_generated.denom[2]
denom[3] => lpm_divide_8os:auto_generated.denom[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_8os:auto_generated.quotient[0]
quotient[1] <= lpm_divide_8os:auto_generated.quotient[1]
quotient[2] <= lpm_divide_8os:auto_generated.quotient[2]
quotient[3] <= lpm_divide_8os:auto_generated.quotient[3]
quotient[4] <= lpm_divide_8os:auto_generated.quotient[4]
quotient[5] <= lpm_divide_8os:auto_generated.quotient[5]
quotient[6] <= lpm_divide_8os:auto_generated.quotient[6]
remain[0] <= lpm_divide_8os:auto_generated.remain[0]
remain[1] <= lpm_divide_8os:auto_generated.remain[1]
remain[2] <= lpm_divide_8os:auto_generated.remain[2]
remain[3] <= lpm_divide_8os:auto_generated.remain[3]


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
denom[0] => sign_div_unsign_akh:divider.denominator[0]
denom[1] => sign_div_unsign_akh:divider.denominator[1]
denom[2] => sign_div_unsign_akh:divider.denominator[2]
denom[3] => sign_div_unsign_akh:divider.denominator[3]
numer[0] => sign_div_unsign_akh:divider.numerator[0]
numer[1] => sign_div_unsign_akh:divider.numerator[1]
numer[2] => sign_div_unsign_akh:divider.numerator[2]
numer[3] => sign_div_unsign_akh:divider.numerator[3]
numer[4] => sign_div_unsign_akh:divider.numerator[4]
numer[5] => sign_div_unsign_akh:divider.numerator[5]
numer[6] => sign_div_unsign_akh:divider.numerator[6]
quotient[0] <= sign_div_unsign_akh:divider.quotient[0]
quotient[1] <= sign_div_unsign_akh:divider.quotient[1]
quotient[2] <= sign_div_unsign_akh:divider.quotient[2]
quotient[3] <= sign_div_unsign_akh:divider.quotient[3]
quotient[4] <= sign_div_unsign_akh:divider.quotient[4]
quotient[5] <= sign_div_unsign_akh:divider.quotient[5]
quotient[6] <= sign_div_unsign_akh:divider.quotient[6]
remain[0] <= sign_div_unsign_akh:divider.remainder[0]
remain[1] <= sign_div_unsign_akh:divider.remainder[1]
remain[2] <= sign_div_unsign_akh:divider.remainder[2]
remain[3] <= sign_div_unsign_akh:divider.remainder[3]


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider
denominator[0] => alt_u_div_84f:divider.denominator[0]
denominator[1] => alt_u_div_84f:divider.denominator[1]
denominator[2] => alt_u_div_84f:divider.denominator[2]
denominator[3] => alt_u_div_84f:divider.denominator[3]
numerator[0] => alt_u_div_84f:divider.numerator[0]
numerator[1] => alt_u_div_84f:divider.numerator[1]
numerator[2] => alt_u_div_84f:divider.numerator[2]
numerator[3] => alt_u_div_84f:divider.numerator[3]
numerator[4] => alt_u_div_84f:divider.numerator[4]
numerator[5] => alt_u_div_84f:divider.numerator[5]
numerator[6] => alt_u_div_84f:divider.numerator[6]
quotient[0] <= protect_quotient[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= protect_quotient[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= protect_quotient[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= protect_quotient[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= protect_quotient[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= protect_quotient[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= protect_quotient[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= protect_remainder[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= protect_remainder[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= protect_remainder[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= protect_remainder[3].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider
denominator[0] => add_sub_7pc:add_sub_0.datab[0]
denominator[0] => add_sub_8pc:add_sub_1.datab[0]
denominator[0] => op_1.IN8
denominator[0] => op_2.IN10
denominator[0] => op_3.IN12
denominator[0] => op_4.IN12
denominator[0] => op_5.IN12
denominator[1] => sel[0].IN1
denominator[1] => add_sub_8pc:add_sub_1.datab[1]
denominator[1] => sel[4].IN1
denominator[1] => sel[8].IN1
denominator[1] => op_1.IN6
denominator[1] => sel[12].IN1
denominator[1] => op_2.IN8
denominator[1] => sel[16].IN1
denominator[1] => op_3.IN10
denominator[1] => sel[20].IN1
denominator[1] => op_4.IN10
denominator[1] => sel[24].IN1
denominator[1] => op_5.IN10
denominator[1] => sel[28].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[5].IN1
denominator[2] => sel[9].IN1
denominator[2] => op_1.IN4
denominator[2] => sel[13].IN1
denominator[2] => op_2.IN6
denominator[2] => sel[17].IN1
denominator[2] => op_3.IN8
denominator[2] => sel[21].IN1
denominator[2] => op_4.IN8
denominator[2] => sel[25].IN1
denominator[2] => op_5.IN8
denominator[2] => sel[29].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[6].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[14].IN1
denominator[3] => op_2.IN4
denominator[3] => sel[18].IN1
denominator[3] => op_3.IN6
denominator[3] => sel[22].IN1
denominator[3] => op_4.IN6
denominator[3] => sel[26].IN1
denominator[3] => op_5.IN6
denominator[3] => sel[30].IN1
numerator[0] => StageOut[30].IN0
numerator[0] => op_5.IN11
numerator[1] => StageOut[25].IN0
numerator[1] => op_4.IN11
numerator[2] => StageOut[20].IN0
numerator[2] => op_3.IN11
numerator[3] => StageOut[15].IN0
numerator[3] => op_2.IN9
numerator[4] => StageOut[10].IN0
numerator[4] => op_1.IN7
numerator[5] => add_sub_8pc:add_sub_1.dataa[0]
numerator[5] => StageOut[5].IN0
numerator[6] => add_sub_7pc:add_sub_0.dataa[0]
numerator[6] => StageOut[0].IN0
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[30].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[31].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[32].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[33].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_7pc:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_7|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_8pc:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
dataa[1] => carry_eqn[1].IN0
dataa[1] => _.IN0
dataa[1] => sum_eqn[1].IN0
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8
CLK => CLK.IN3
RST => RST.IN1
EN => EN.IN1
PLAYING <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
TONE[0] <= TONE[0].DB_MAX_OUTPUT_PORT_TYPE
TONE[1] <= TONE[1].DB_MAX_OUTPUT_PORT_TYPE
TONE[2] <= TONE[2].DB_MAX_OUTPUT_PORT_TYPE
TONE[3] <= TONE[3].DB_MAX_OUTPUT_PORT_TYPE
TONE[4] <= TONE[4].DB_MAX_OUTPUT_PORT_TYPE
TONE[5] <= TONE[5].DB_MAX_OUTPUT_PORT_TYPE
TONE[6] <= TONE[6].DB_MAX_OUTPUT_PORT_TYPE
WAVE <= MusicPlayer:comb_3.Wave
BCD1[0] <= BCDSpliter:comb_6.O1
BCD1[1] <= BCDSpliter:comb_6.O1
BCD1[2] <= BCDSpliter:comb_6.O1
BCD1[3] <= BCDSpliter:comb_6.O1
BCD0[0] <= BCDSpliter:comb_6.O0
BCD0[1] <= BCDSpliter:comb_6.O0
BCD0[2] <= BCDSpliter:comb_6.O0
BCD0[3] <= BCDSpliter:comb_6.O0


|MyPianoPro|MusicUnit:comb_8|MusicPlayer:comb_3
CLK => CLK.IN2
RST => RST.IN2
EN => EN.IN1
RomAddr[0] <= ToneGenerator:tg.addr
RomAddr[1] <= ToneGenerator:tg.addr
RomAddr[2] <= ToneGenerator:tg.addr
RomAddr[3] <= ToneGenerator:tg.addr
RomAddr[4] <= ToneGenerator:tg.addr
RomAddr[5] <= ToneGenerator:tg.addr
RomAddr[6] <= ToneGenerator:tg.addr
RomAddr[7] <= ToneGenerator:tg.addr
RomAddr[8] <= ToneGenerator:tg.addr
RomAddr[9] <= ToneGenerator:tg.addr
RomTone[0] => RomTone[0].IN1
RomTone[1] => RomTone[1].IN1
RomTone[2] => RomTone[2].IN1
RomTone[3] => RomTone[3].IN1
RomTone[4] => RomTone[4].IN1
RomTone[5] => RomTone[5].IN1
RomTone[6] => RomTone[6].IN1
RomNote[0] => RomNote[0].IN1
RomNote[1] => RomNote[1].IN1
RomNote[2] => RomNote[2].IN1
RomNote[3] => RomNote[3].IN1
RomNote[4] => RomNote[4].IN1
RomNote[5] => RomNote[5].IN1
RomNote[6] => RomNote[6].IN1
Tone[0] <= Tone[0].DB_MAX_OUTPUT_PORT_TYPE
Tone[1] <= Tone[1].DB_MAX_OUTPUT_PORT_TYPE
Tone[2] <= Tone[2].DB_MAX_OUTPUT_PORT_TYPE
Tone[3] <= Tone[3].DB_MAX_OUTPUT_PORT_TYPE
Tone[4] <= Tone[4].DB_MAX_OUTPUT_PORT_TYPE
Tone[5] <= Tone[5].DB_MAX_OUTPUT_PORT_TYPE
Tone[6] <= Tone[6].DB_MAX_OUTPUT_PORT_TYPE
Wave <= WaveGenerator:wg.wave


|MyPianoPro|MusicUnit:comb_8|MusicPlayer:comb_3|ToneGenerator:tg
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
clk => addr[8]~reg0.CLK
clk => addr[9]~reg0.CLK
clk => addr_add.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
rst => addr[8]~reg0.ACLR
rst => addr[9]~reg0.ACLR
rst => addr_add.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
note[0] => Add0.IN14
note[1] => Add0.IN13
note[2] => Add0.IN12
note[3] => Add0.IN11
note[4] => Add0.IN10
note[5] => Add0.IN9
note[6] => Add0.IN8
tone_original[0] => tone.DATAB
tone_original[1] => tone.DATAB
tone_original[2] => tone.DATAB
tone_original[3] => tone.DATAB
tone_original[4] => tone.DATAB
tone_original[5] => tone.DATAB
tone_original[6] => tone.DATAB
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[3] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[4] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[5] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[6] <= tone.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8|MusicPlayer:comb_3|WaveGenerator:wg
clk => level.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => level.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
en => wave.IN1
tone[0] => Decoder0.IN6
tone[1] => Decoder0.IN5
tone[2] => Decoder0.IN4
tone[3] => Decoder0.IN3
tone[4] => Decoder0.IN2
tone[5] => Decoder0.IN1
tone[6] => Decoder0.IN0
wave <= wave.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8|ROM:comb_4
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_8|ROM:comb_4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_hs91:auto_generated.address_a[0]
address_a[1] => altsyncram_hs91:auto_generated.address_a[1]
address_a[2] => altsyncram_hs91:auto_generated.address_a[2]
address_a[3] => altsyncram_hs91:auto_generated.address_a[3]
address_a[4] => altsyncram_hs91:auto_generated.address_a[4]
address_a[5] => altsyncram_hs91:auto_generated.address_a[5]
address_a[6] => altsyncram_hs91:auto_generated.address_a[6]
address_a[7] => altsyncram_hs91:auto_generated.address_a[7]
address_a[8] => altsyncram_hs91:auto_generated.address_a[8]
address_a[9] => altsyncram_hs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_hs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_hs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_hs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_hs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_hs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_hs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_hs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_hs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_8|ROM:comb_4|altsyncram:altsyncram_component|altsyncram_hs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_8|ROM:comb_5
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_8|ROM:comb_5|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_gs91:auto_generated.address_a[0]
address_a[1] => altsyncram_gs91:auto_generated.address_a[1]
address_a[2] => altsyncram_gs91:auto_generated.address_a[2]
address_a[3] => altsyncram_gs91:auto_generated.address_a[3]
address_a[4] => altsyncram_gs91:auto_generated.address_a[4]
address_a[5] => altsyncram_gs91:auto_generated.address_a[5]
address_a[6] => altsyncram_gs91:auto_generated.address_a[6]
address_a[7] => altsyncram_gs91:auto_generated.address_a[7]
address_a[8] => altsyncram_gs91:auto_generated.address_a[8]
address_a[9] => altsyncram_gs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_gs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_gs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_gs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_gs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_gs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_gs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_gs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_gs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_8|ROM:comb_5|altsyncram:altsyncram_component|altsyncram_gs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
O1[0] <= DIV:comb_3.quotient
O1[1] <= DIV:comb_3.quotient
O1[2] <= DIV:comb_3.quotient
O1[3] <= DIV:comb_3.quotient
O0[0] <= DIV:comb_3.remain
O0[1] <= DIV:comb_3.remain
O0[2] <= DIV:comb_3.remain
O0[3] <= DIV:comb_3.remain


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3
denom[0] => denom[0].IN1
denom[1] => denom[1].IN1
denom[2] => denom[2].IN1
denom[3] => denom[3].IN1
numer[0] => numer[0].IN1
numer[1] => numer[1].IN1
numer[2] => numer[2].IN1
numer[3] => numer[3].IN1
numer[4] => numer[4].IN1
numer[5] => numer[5].IN1
numer[6] => numer[6].IN1
quotient[0] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[1] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[2] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[3] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[4] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[5] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[6] <= lpm_divide:LPM_DIVIDE_component.quotient
remain[0] <= lpm_divide:LPM_DIVIDE_component.remain
remain[1] <= lpm_divide:LPM_DIVIDE_component.remain
remain[2] <= lpm_divide:LPM_DIVIDE_component.remain
remain[3] <= lpm_divide:LPM_DIVIDE_component.remain


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component
numer[0] => lpm_divide_8os:auto_generated.numer[0]
numer[1] => lpm_divide_8os:auto_generated.numer[1]
numer[2] => lpm_divide_8os:auto_generated.numer[2]
numer[3] => lpm_divide_8os:auto_generated.numer[3]
numer[4] => lpm_divide_8os:auto_generated.numer[4]
numer[5] => lpm_divide_8os:auto_generated.numer[5]
numer[6] => lpm_divide_8os:auto_generated.numer[6]
denom[0] => lpm_divide_8os:auto_generated.denom[0]
denom[1] => lpm_divide_8os:auto_generated.denom[1]
denom[2] => lpm_divide_8os:auto_generated.denom[2]
denom[3] => lpm_divide_8os:auto_generated.denom[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_8os:auto_generated.quotient[0]
quotient[1] <= lpm_divide_8os:auto_generated.quotient[1]
quotient[2] <= lpm_divide_8os:auto_generated.quotient[2]
quotient[3] <= lpm_divide_8os:auto_generated.quotient[3]
quotient[4] <= lpm_divide_8os:auto_generated.quotient[4]
quotient[5] <= lpm_divide_8os:auto_generated.quotient[5]
quotient[6] <= lpm_divide_8os:auto_generated.quotient[6]
remain[0] <= lpm_divide_8os:auto_generated.remain[0]
remain[1] <= lpm_divide_8os:auto_generated.remain[1]
remain[2] <= lpm_divide_8os:auto_generated.remain[2]
remain[3] <= lpm_divide_8os:auto_generated.remain[3]


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
denom[0] => sign_div_unsign_akh:divider.denominator[0]
denom[1] => sign_div_unsign_akh:divider.denominator[1]
denom[2] => sign_div_unsign_akh:divider.denominator[2]
denom[3] => sign_div_unsign_akh:divider.denominator[3]
numer[0] => sign_div_unsign_akh:divider.numerator[0]
numer[1] => sign_div_unsign_akh:divider.numerator[1]
numer[2] => sign_div_unsign_akh:divider.numerator[2]
numer[3] => sign_div_unsign_akh:divider.numerator[3]
numer[4] => sign_div_unsign_akh:divider.numerator[4]
numer[5] => sign_div_unsign_akh:divider.numerator[5]
numer[6] => sign_div_unsign_akh:divider.numerator[6]
quotient[0] <= sign_div_unsign_akh:divider.quotient[0]
quotient[1] <= sign_div_unsign_akh:divider.quotient[1]
quotient[2] <= sign_div_unsign_akh:divider.quotient[2]
quotient[3] <= sign_div_unsign_akh:divider.quotient[3]
quotient[4] <= sign_div_unsign_akh:divider.quotient[4]
quotient[5] <= sign_div_unsign_akh:divider.quotient[5]
quotient[6] <= sign_div_unsign_akh:divider.quotient[6]
remain[0] <= sign_div_unsign_akh:divider.remainder[0]
remain[1] <= sign_div_unsign_akh:divider.remainder[1]
remain[2] <= sign_div_unsign_akh:divider.remainder[2]
remain[3] <= sign_div_unsign_akh:divider.remainder[3]


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider
denominator[0] => alt_u_div_84f:divider.denominator[0]
denominator[1] => alt_u_div_84f:divider.denominator[1]
denominator[2] => alt_u_div_84f:divider.denominator[2]
denominator[3] => alt_u_div_84f:divider.denominator[3]
numerator[0] => alt_u_div_84f:divider.numerator[0]
numerator[1] => alt_u_div_84f:divider.numerator[1]
numerator[2] => alt_u_div_84f:divider.numerator[2]
numerator[3] => alt_u_div_84f:divider.numerator[3]
numerator[4] => alt_u_div_84f:divider.numerator[4]
numerator[5] => alt_u_div_84f:divider.numerator[5]
numerator[6] => alt_u_div_84f:divider.numerator[6]
quotient[0] <= protect_quotient[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= protect_quotient[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= protect_quotient[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= protect_quotient[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= protect_quotient[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= protect_quotient[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= protect_quotient[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= protect_remainder[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= protect_remainder[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= protect_remainder[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= protect_remainder[3].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider
denominator[0] => add_sub_7pc:add_sub_0.datab[0]
denominator[0] => add_sub_8pc:add_sub_1.datab[0]
denominator[0] => op_1.IN8
denominator[0] => op_2.IN10
denominator[0] => op_3.IN12
denominator[0] => op_4.IN12
denominator[0] => op_5.IN12
denominator[1] => sel[0].IN1
denominator[1] => add_sub_8pc:add_sub_1.datab[1]
denominator[1] => sel[4].IN1
denominator[1] => sel[8].IN1
denominator[1] => op_1.IN6
denominator[1] => sel[12].IN1
denominator[1] => op_2.IN8
denominator[1] => sel[16].IN1
denominator[1] => op_3.IN10
denominator[1] => sel[20].IN1
denominator[1] => op_4.IN10
denominator[1] => sel[24].IN1
denominator[1] => op_5.IN10
denominator[1] => sel[28].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[5].IN1
denominator[2] => sel[9].IN1
denominator[2] => op_1.IN4
denominator[2] => sel[13].IN1
denominator[2] => op_2.IN6
denominator[2] => sel[17].IN1
denominator[2] => op_3.IN8
denominator[2] => sel[21].IN1
denominator[2] => op_4.IN8
denominator[2] => sel[25].IN1
denominator[2] => op_5.IN8
denominator[2] => sel[29].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[6].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[14].IN1
denominator[3] => op_2.IN4
denominator[3] => sel[18].IN1
denominator[3] => op_3.IN6
denominator[3] => sel[22].IN1
denominator[3] => op_4.IN6
denominator[3] => sel[26].IN1
denominator[3] => op_5.IN6
denominator[3] => sel[30].IN1
numerator[0] => StageOut[30].IN0
numerator[0] => op_5.IN11
numerator[1] => StageOut[25].IN0
numerator[1] => op_4.IN11
numerator[2] => StageOut[20].IN0
numerator[2] => op_3.IN11
numerator[3] => StageOut[15].IN0
numerator[3] => op_2.IN9
numerator[4] => StageOut[10].IN0
numerator[4] => op_1.IN7
numerator[5] => add_sub_8pc:add_sub_1.dataa[0]
numerator[5] => StageOut[5].IN0
numerator[6] => add_sub_7pc:add_sub_0.dataa[0]
numerator[6] => StageOut[0].IN0
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[30].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[31].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[32].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[33].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_7pc:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_8|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_8pc:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
dataa[1] => carry_eqn[1].IN0
dataa[1] => _.IN0
dataa[1] => sum_eqn[1].IN0
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9
CLK => CLK.IN3
RST => RST.IN1
EN => EN.IN1
PLAYING <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
TONE[0] <= TONE[0].DB_MAX_OUTPUT_PORT_TYPE
TONE[1] <= TONE[1].DB_MAX_OUTPUT_PORT_TYPE
TONE[2] <= TONE[2].DB_MAX_OUTPUT_PORT_TYPE
TONE[3] <= TONE[3].DB_MAX_OUTPUT_PORT_TYPE
TONE[4] <= TONE[4].DB_MAX_OUTPUT_PORT_TYPE
TONE[5] <= TONE[5].DB_MAX_OUTPUT_PORT_TYPE
TONE[6] <= TONE[6].DB_MAX_OUTPUT_PORT_TYPE
WAVE <= MusicPlayer:comb_3.Wave
BCD1[0] <= BCDSpliter:comb_6.O1
BCD1[1] <= BCDSpliter:comb_6.O1
BCD1[2] <= BCDSpliter:comb_6.O1
BCD1[3] <= BCDSpliter:comb_6.O1
BCD0[0] <= BCDSpliter:comb_6.O0
BCD0[1] <= BCDSpliter:comb_6.O0
BCD0[2] <= BCDSpliter:comb_6.O0
BCD0[3] <= BCDSpliter:comb_6.O0


|MyPianoPro|MusicUnit:comb_9|MusicPlayer:comb_3
CLK => CLK.IN2
RST => RST.IN2
EN => EN.IN1
RomAddr[0] <= ToneGenerator:tg.addr
RomAddr[1] <= ToneGenerator:tg.addr
RomAddr[2] <= ToneGenerator:tg.addr
RomAddr[3] <= ToneGenerator:tg.addr
RomAddr[4] <= ToneGenerator:tg.addr
RomAddr[5] <= ToneGenerator:tg.addr
RomAddr[6] <= ToneGenerator:tg.addr
RomAddr[7] <= ToneGenerator:tg.addr
RomAddr[8] <= ToneGenerator:tg.addr
RomAddr[9] <= ToneGenerator:tg.addr
RomTone[0] => RomTone[0].IN1
RomTone[1] => RomTone[1].IN1
RomTone[2] => RomTone[2].IN1
RomTone[3] => RomTone[3].IN1
RomTone[4] => RomTone[4].IN1
RomTone[5] => RomTone[5].IN1
RomTone[6] => RomTone[6].IN1
RomNote[0] => RomNote[0].IN1
RomNote[1] => RomNote[1].IN1
RomNote[2] => RomNote[2].IN1
RomNote[3] => RomNote[3].IN1
RomNote[4] => RomNote[4].IN1
RomNote[5] => RomNote[5].IN1
RomNote[6] => RomNote[6].IN1
Tone[0] <= Tone[0].DB_MAX_OUTPUT_PORT_TYPE
Tone[1] <= Tone[1].DB_MAX_OUTPUT_PORT_TYPE
Tone[2] <= Tone[2].DB_MAX_OUTPUT_PORT_TYPE
Tone[3] <= Tone[3].DB_MAX_OUTPUT_PORT_TYPE
Tone[4] <= Tone[4].DB_MAX_OUTPUT_PORT_TYPE
Tone[5] <= Tone[5].DB_MAX_OUTPUT_PORT_TYPE
Tone[6] <= Tone[6].DB_MAX_OUTPUT_PORT_TYPE
Wave <= WaveGenerator:wg.wave


|MyPianoPro|MusicUnit:comb_9|MusicPlayer:comb_3|ToneGenerator:tg
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
clk => addr[8]~reg0.CLK
clk => addr[9]~reg0.CLK
clk => addr_add.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
rst => addr[8]~reg0.ACLR
rst => addr[9]~reg0.ACLR
rst => addr_add.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
note[0] => Add0.IN14
note[1] => Add0.IN13
note[2] => Add0.IN12
note[3] => Add0.IN11
note[4] => Add0.IN10
note[5] => Add0.IN9
note[6] => Add0.IN8
tone_original[0] => tone.DATAB
tone_original[1] => tone.DATAB
tone_original[2] => tone.DATAB
tone_original[3] => tone.DATAB
tone_original[4] => tone.DATAB
tone_original[5] => tone.DATAB
tone_original[6] => tone.DATAB
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[3] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[4] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[5] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[6] <= tone.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9|MusicPlayer:comb_3|WaveGenerator:wg
clk => level.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => level.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
en => wave.IN1
tone[0] => Decoder0.IN6
tone[1] => Decoder0.IN5
tone[2] => Decoder0.IN4
tone[3] => Decoder0.IN3
tone[4] => Decoder0.IN2
tone[5] => Decoder0.IN1
tone[6] => Decoder0.IN0
wave <= wave.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9|ROM:comb_4
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_9|ROM:comb_4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_js91:auto_generated.address_a[0]
address_a[1] => altsyncram_js91:auto_generated.address_a[1]
address_a[2] => altsyncram_js91:auto_generated.address_a[2]
address_a[3] => altsyncram_js91:auto_generated.address_a[3]
address_a[4] => altsyncram_js91:auto_generated.address_a[4]
address_a[5] => altsyncram_js91:auto_generated.address_a[5]
address_a[6] => altsyncram_js91:auto_generated.address_a[6]
address_a[7] => altsyncram_js91:auto_generated.address_a[7]
address_a[8] => altsyncram_js91:auto_generated.address_a[8]
address_a[9] => altsyncram_js91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_js91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_js91:auto_generated.q_a[0]
q_a[1] <= altsyncram_js91:auto_generated.q_a[1]
q_a[2] <= altsyncram_js91:auto_generated.q_a[2]
q_a[3] <= altsyncram_js91:auto_generated.q_a[3]
q_a[4] <= altsyncram_js91:auto_generated.q_a[4]
q_a[5] <= altsyncram_js91:auto_generated.q_a[5]
q_a[6] <= altsyncram_js91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_9|ROM:comb_4|altsyncram:altsyncram_component|altsyncram_js91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_9|ROM:comb_5
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_9|ROM:comb_5|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_gs91:auto_generated.address_a[0]
address_a[1] => altsyncram_gs91:auto_generated.address_a[1]
address_a[2] => altsyncram_gs91:auto_generated.address_a[2]
address_a[3] => altsyncram_gs91:auto_generated.address_a[3]
address_a[4] => altsyncram_gs91:auto_generated.address_a[4]
address_a[5] => altsyncram_gs91:auto_generated.address_a[5]
address_a[6] => altsyncram_gs91:auto_generated.address_a[6]
address_a[7] => altsyncram_gs91:auto_generated.address_a[7]
address_a[8] => altsyncram_gs91:auto_generated.address_a[8]
address_a[9] => altsyncram_gs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_gs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_gs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_gs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_gs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_gs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_gs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_gs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_gs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_9|ROM:comb_5|altsyncram:altsyncram_component|altsyncram_gs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
O1[0] <= DIV:comb_3.quotient
O1[1] <= DIV:comb_3.quotient
O1[2] <= DIV:comb_3.quotient
O1[3] <= DIV:comb_3.quotient
O0[0] <= DIV:comb_3.remain
O0[1] <= DIV:comb_3.remain
O0[2] <= DIV:comb_3.remain
O0[3] <= DIV:comb_3.remain


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3
denom[0] => denom[0].IN1
denom[1] => denom[1].IN1
denom[2] => denom[2].IN1
denom[3] => denom[3].IN1
numer[0] => numer[0].IN1
numer[1] => numer[1].IN1
numer[2] => numer[2].IN1
numer[3] => numer[3].IN1
numer[4] => numer[4].IN1
numer[5] => numer[5].IN1
numer[6] => numer[6].IN1
quotient[0] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[1] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[2] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[3] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[4] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[5] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[6] <= lpm_divide:LPM_DIVIDE_component.quotient
remain[0] <= lpm_divide:LPM_DIVIDE_component.remain
remain[1] <= lpm_divide:LPM_DIVIDE_component.remain
remain[2] <= lpm_divide:LPM_DIVIDE_component.remain
remain[3] <= lpm_divide:LPM_DIVIDE_component.remain


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component
numer[0] => lpm_divide_8os:auto_generated.numer[0]
numer[1] => lpm_divide_8os:auto_generated.numer[1]
numer[2] => lpm_divide_8os:auto_generated.numer[2]
numer[3] => lpm_divide_8os:auto_generated.numer[3]
numer[4] => lpm_divide_8os:auto_generated.numer[4]
numer[5] => lpm_divide_8os:auto_generated.numer[5]
numer[6] => lpm_divide_8os:auto_generated.numer[6]
denom[0] => lpm_divide_8os:auto_generated.denom[0]
denom[1] => lpm_divide_8os:auto_generated.denom[1]
denom[2] => lpm_divide_8os:auto_generated.denom[2]
denom[3] => lpm_divide_8os:auto_generated.denom[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_8os:auto_generated.quotient[0]
quotient[1] <= lpm_divide_8os:auto_generated.quotient[1]
quotient[2] <= lpm_divide_8os:auto_generated.quotient[2]
quotient[3] <= lpm_divide_8os:auto_generated.quotient[3]
quotient[4] <= lpm_divide_8os:auto_generated.quotient[4]
quotient[5] <= lpm_divide_8os:auto_generated.quotient[5]
quotient[6] <= lpm_divide_8os:auto_generated.quotient[6]
remain[0] <= lpm_divide_8os:auto_generated.remain[0]
remain[1] <= lpm_divide_8os:auto_generated.remain[1]
remain[2] <= lpm_divide_8os:auto_generated.remain[2]
remain[3] <= lpm_divide_8os:auto_generated.remain[3]


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
denom[0] => sign_div_unsign_akh:divider.denominator[0]
denom[1] => sign_div_unsign_akh:divider.denominator[1]
denom[2] => sign_div_unsign_akh:divider.denominator[2]
denom[3] => sign_div_unsign_akh:divider.denominator[3]
numer[0] => sign_div_unsign_akh:divider.numerator[0]
numer[1] => sign_div_unsign_akh:divider.numerator[1]
numer[2] => sign_div_unsign_akh:divider.numerator[2]
numer[3] => sign_div_unsign_akh:divider.numerator[3]
numer[4] => sign_div_unsign_akh:divider.numerator[4]
numer[5] => sign_div_unsign_akh:divider.numerator[5]
numer[6] => sign_div_unsign_akh:divider.numerator[6]
quotient[0] <= sign_div_unsign_akh:divider.quotient[0]
quotient[1] <= sign_div_unsign_akh:divider.quotient[1]
quotient[2] <= sign_div_unsign_akh:divider.quotient[2]
quotient[3] <= sign_div_unsign_akh:divider.quotient[3]
quotient[4] <= sign_div_unsign_akh:divider.quotient[4]
quotient[5] <= sign_div_unsign_akh:divider.quotient[5]
quotient[6] <= sign_div_unsign_akh:divider.quotient[6]
remain[0] <= sign_div_unsign_akh:divider.remainder[0]
remain[1] <= sign_div_unsign_akh:divider.remainder[1]
remain[2] <= sign_div_unsign_akh:divider.remainder[2]
remain[3] <= sign_div_unsign_akh:divider.remainder[3]


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider
denominator[0] => alt_u_div_84f:divider.denominator[0]
denominator[1] => alt_u_div_84f:divider.denominator[1]
denominator[2] => alt_u_div_84f:divider.denominator[2]
denominator[3] => alt_u_div_84f:divider.denominator[3]
numerator[0] => alt_u_div_84f:divider.numerator[0]
numerator[1] => alt_u_div_84f:divider.numerator[1]
numerator[2] => alt_u_div_84f:divider.numerator[2]
numerator[3] => alt_u_div_84f:divider.numerator[3]
numerator[4] => alt_u_div_84f:divider.numerator[4]
numerator[5] => alt_u_div_84f:divider.numerator[5]
numerator[6] => alt_u_div_84f:divider.numerator[6]
quotient[0] <= protect_quotient[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= protect_quotient[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= protect_quotient[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= protect_quotient[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= protect_quotient[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= protect_quotient[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= protect_quotient[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= protect_remainder[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= protect_remainder[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= protect_remainder[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= protect_remainder[3].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider
denominator[0] => add_sub_7pc:add_sub_0.datab[0]
denominator[0] => add_sub_8pc:add_sub_1.datab[0]
denominator[0] => op_1.IN8
denominator[0] => op_2.IN10
denominator[0] => op_3.IN12
denominator[0] => op_4.IN12
denominator[0] => op_5.IN12
denominator[1] => sel[0].IN1
denominator[1] => add_sub_8pc:add_sub_1.datab[1]
denominator[1] => sel[4].IN1
denominator[1] => sel[8].IN1
denominator[1] => op_1.IN6
denominator[1] => sel[12].IN1
denominator[1] => op_2.IN8
denominator[1] => sel[16].IN1
denominator[1] => op_3.IN10
denominator[1] => sel[20].IN1
denominator[1] => op_4.IN10
denominator[1] => sel[24].IN1
denominator[1] => op_5.IN10
denominator[1] => sel[28].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[5].IN1
denominator[2] => sel[9].IN1
denominator[2] => op_1.IN4
denominator[2] => sel[13].IN1
denominator[2] => op_2.IN6
denominator[2] => sel[17].IN1
denominator[2] => op_3.IN8
denominator[2] => sel[21].IN1
denominator[2] => op_4.IN8
denominator[2] => sel[25].IN1
denominator[2] => op_5.IN8
denominator[2] => sel[29].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[6].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[14].IN1
denominator[3] => op_2.IN4
denominator[3] => sel[18].IN1
denominator[3] => op_3.IN6
denominator[3] => sel[22].IN1
denominator[3] => op_4.IN6
denominator[3] => sel[26].IN1
denominator[3] => op_5.IN6
denominator[3] => sel[30].IN1
numerator[0] => StageOut[30].IN0
numerator[0] => op_5.IN11
numerator[1] => StageOut[25].IN0
numerator[1] => op_4.IN11
numerator[2] => StageOut[20].IN0
numerator[2] => op_3.IN11
numerator[3] => StageOut[15].IN0
numerator[3] => op_2.IN9
numerator[4] => StageOut[10].IN0
numerator[4] => op_1.IN7
numerator[5] => add_sub_8pc:add_sub_1.dataa[0]
numerator[5] => StageOut[5].IN0
numerator[6] => add_sub_7pc:add_sub_0.dataa[0]
numerator[6] => StageOut[0].IN0
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[30].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[31].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[32].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[33].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_7pc:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_9|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_8pc:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
dataa[1] => carry_eqn[1].IN0
dataa[1] => _.IN0
dataa[1] => sum_eqn[1].IN0
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10
CLK => CLK.IN3
RST => RST.IN1
EN => EN.IN1
PLAYING <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
TONE[0] <= TONE[0].DB_MAX_OUTPUT_PORT_TYPE
TONE[1] <= TONE[1].DB_MAX_OUTPUT_PORT_TYPE
TONE[2] <= TONE[2].DB_MAX_OUTPUT_PORT_TYPE
TONE[3] <= TONE[3].DB_MAX_OUTPUT_PORT_TYPE
TONE[4] <= TONE[4].DB_MAX_OUTPUT_PORT_TYPE
TONE[5] <= TONE[5].DB_MAX_OUTPUT_PORT_TYPE
TONE[6] <= TONE[6].DB_MAX_OUTPUT_PORT_TYPE
WAVE <= MusicPlayer:comb_3.Wave
BCD1[0] <= BCDSpliter:comb_6.O1
BCD1[1] <= BCDSpliter:comb_6.O1
BCD1[2] <= BCDSpliter:comb_6.O1
BCD1[3] <= BCDSpliter:comb_6.O1
BCD0[0] <= BCDSpliter:comb_6.O0
BCD0[1] <= BCDSpliter:comb_6.O0
BCD0[2] <= BCDSpliter:comb_6.O0
BCD0[3] <= BCDSpliter:comb_6.O0


|MyPianoPro|MusicUnit:comb_10|MusicPlayer:comb_3
CLK => CLK.IN2
RST => RST.IN2
EN => EN.IN1
RomAddr[0] <= ToneGenerator:tg.addr
RomAddr[1] <= ToneGenerator:tg.addr
RomAddr[2] <= ToneGenerator:tg.addr
RomAddr[3] <= ToneGenerator:tg.addr
RomAddr[4] <= ToneGenerator:tg.addr
RomAddr[5] <= ToneGenerator:tg.addr
RomAddr[6] <= ToneGenerator:tg.addr
RomAddr[7] <= ToneGenerator:tg.addr
RomAddr[8] <= ToneGenerator:tg.addr
RomAddr[9] <= ToneGenerator:tg.addr
RomTone[0] => RomTone[0].IN1
RomTone[1] => RomTone[1].IN1
RomTone[2] => RomTone[2].IN1
RomTone[3] => RomTone[3].IN1
RomTone[4] => RomTone[4].IN1
RomTone[5] => RomTone[5].IN1
RomTone[6] => RomTone[6].IN1
RomNote[0] => RomNote[0].IN1
RomNote[1] => RomNote[1].IN1
RomNote[2] => RomNote[2].IN1
RomNote[3] => RomNote[3].IN1
RomNote[4] => RomNote[4].IN1
RomNote[5] => RomNote[5].IN1
RomNote[6] => RomNote[6].IN1
Tone[0] <= Tone[0].DB_MAX_OUTPUT_PORT_TYPE
Tone[1] <= Tone[1].DB_MAX_OUTPUT_PORT_TYPE
Tone[2] <= Tone[2].DB_MAX_OUTPUT_PORT_TYPE
Tone[3] <= Tone[3].DB_MAX_OUTPUT_PORT_TYPE
Tone[4] <= Tone[4].DB_MAX_OUTPUT_PORT_TYPE
Tone[5] <= Tone[5].DB_MAX_OUTPUT_PORT_TYPE
Tone[6] <= Tone[6].DB_MAX_OUTPUT_PORT_TYPE
Wave <= WaveGenerator:wg.wave


|MyPianoPro|MusicUnit:comb_10|MusicPlayer:comb_3|ToneGenerator:tg
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
clk => addr[8]~reg0.CLK
clk => addr[9]~reg0.CLK
clk => addr_add.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
rst => addr[8]~reg0.ACLR
rst => addr[9]~reg0.ACLR
rst => addr_add.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
rst => tone.OUTPUTSELECT
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[8] <= addr[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[9] <= addr[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
note[0] => Add0.IN14
note[1] => Add0.IN13
note[2] => Add0.IN12
note[3] => Add0.IN11
note[4] => Add0.IN10
note[5] => Add0.IN9
note[6] => Add0.IN8
tone_original[0] => tone.DATAB
tone_original[1] => tone.DATAB
tone_original[2] => tone.DATAB
tone_original[3] => tone.DATAB
tone_original[4] => tone.DATAB
tone_original[5] => tone.DATAB
tone_original[6] => tone.DATAB
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[3] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[4] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[5] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[6] <= tone.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10|MusicPlayer:comb_3|WaveGenerator:wg
clk => level.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
rst => level.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
en => wave.IN1
tone[0] => Decoder0.IN6
tone[1] => Decoder0.IN5
tone[2] => Decoder0.IN4
tone[3] => Decoder0.IN3
tone[4] => Decoder0.IN2
tone[5] => Decoder0.IN1
tone[6] => Decoder0.IN0
wave <= wave.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10|ROM:comb_4
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_10|ROM:comb_4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_ls91:auto_generated.address_a[0]
address_a[1] => altsyncram_ls91:auto_generated.address_a[1]
address_a[2] => altsyncram_ls91:auto_generated.address_a[2]
address_a[3] => altsyncram_ls91:auto_generated.address_a[3]
address_a[4] => altsyncram_ls91:auto_generated.address_a[4]
address_a[5] => altsyncram_ls91:auto_generated.address_a[5]
address_a[6] => altsyncram_ls91:auto_generated.address_a[6]
address_a[7] => altsyncram_ls91:auto_generated.address_a[7]
address_a[8] => altsyncram_ls91:auto_generated.address_a[8]
address_a[9] => altsyncram_ls91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_ls91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_ls91:auto_generated.q_a[0]
q_a[1] <= altsyncram_ls91:auto_generated.q_a[1]
q_a[2] <= altsyncram_ls91:auto_generated.q_a[2]
q_a[3] <= altsyncram_ls91:auto_generated.q_a[3]
q_a[4] <= altsyncram_ls91:auto_generated.q_a[4]
q_a[5] <= altsyncram_ls91:auto_generated.q_a[5]
q_a[6] <= altsyncram_ls91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_10|ROM:comb_4|altsyncram:altsyncram_component|altsyncram_ls91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_10|ROM:comb_5
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a


|MyPianoPro|MusicUnit:comb_10|ROM:comb_5|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_gs91:auto_generated.address_a[0]
address_a[1] => altsyncram_gs91:auto_generated.address_a[1]
address_a[2] => altsyncram_gs91:auto_generated.address_a[2]
address_a[3] => altsyncram_gs91:auto_generated.address_a[3]
address_a[4] => altsyncram_gs91:auto_generated.address_a[4]
address_a[5] => altsyncram_gs91:auto_generated.address_a[5]
address_a[6] => altsyncram_gs91:auto_generated.address_a[6]
address_a[7] => altsyncram_gs91:auto_generated.address_a[7]
address_a[8] => altsyncram_gs91:auto_generated.address_a[8]
address_a[9] => altsyncram_gs91:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_gs91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_gs91:auto_generated.q_a[0]
q_a[1] <= altsyncram_gs91:auto_generated.q_a[1]
q_a[2] <= altsyncram_gs91:auto_generated.q_a[2]
q_a[3] <= altsyncram_gs91:auto_generated.q_a[3]
q_a[4] <= altsyncram_gs91:auto_generated.q_a[4]
q_a[5] <= altsyncram_gs91:auto_generated.q_a[5]
q_a[6] <= altsyncram_gs91:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MyPianoPro|MusicUnit:comb_10|ROM:comb_5|altsyncram:altsyncram_component|altsyncram_gs91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
O1[0] <= DIV:comb_3.quotient
O1[1] <= DIV:comb_3.quotient
O1[2] <= DIV:comb_3.quotient
O1[3] <= DIV:comb_3.quotient
O0[0] <= DIV:comb_3.remain
O0[1] <= DIV:comb_3.remain
O0[2] <= DIV:comb_3.remain
O0[3] <= DIV:comb_3.remain


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3
denom[0] => denom[0].IN1
denom[1] => denom[1].IN1
denom[2] => denom[2].IN1
denom[3] => denom[3].IN1
numer[0] => numer[0].IN1
numer[1] => numer[1].IN1
numer[2] => numer[2].IN1
numer[3] => numer[3].IN1
numer[4] => numer[4].IN1
numer[5] => numer[5].IN1
numer[6] => numer[6].IN1
quotient[0] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[1] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[2] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[3] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[4] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[5] <= lpm_divide:LPM_DIVIDE_component.quotient
quotient[6] <= lpm_divide:LPM_DIVIDE_component.quotient
remain[0] <= lpm_divide:LPM_DIVIDE_component.remain
remain[1] <= lpm_divide:LPM_DIVIDE_component.remain
remain[2] <= lpm_divide:LPM_DIVIDE_component.remain
remain[3] <= lpm_divide:LPM_DIVIDE_component.remain


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component
numer[0] => lpm_divide_8os:auto_generated.numer[0]
numer[1] => lpm_divide_8os:auto_generated.numer[1]
numer[2] => lpm_divide_8os:auto_generated.numer[2]
numer[3] => lpm_divide_8os:auto_generated.numer[3]
numer[4] => lpm_divide_8os:auto_generated.numer[4]
numer[5] => lpm_divide_8os:auto_generated.numer[5]
numer[6] => lpm_divide_8os:auto_generated.numer[6]
denom[0] => lpm_divide_8os:auto_generated.denom[0]
denom[1] => lpm_divide_8os:auto_generated.denom[1]
denom[2] => lpm_divide_8os:auto_generated.denom[2]
denom[3] => lpm_divide_8os:auto_generated.denom[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
quotient[0] <= lpm_divide_8os:auto_generated.quotient[0]
quotient[1] <= lpm_divide_8os:auto_generated.quotient[1]
quotient[2] <= lpm_divide_8os:auto_generated.quotient[2]
quotient[3] <= lpm_divide_8os:auto_generated.quotient[3]
quotient[4] <= lpm_divide_8os:auto_generated.quotient[4]
quotient[5] <= lpm_divide_8os:auto_generated.quotient[5]
quotient[6] <= lpm_divide_8os:auto_generated.quotient[6]
remain[0] <= lpm_divide_8os:auto_generated.remain[0]
remain[1] <= lpm_divide_8os:auto_generated.remain[1]
remain[2] <= lpm_divide_8os:auto_generated.remain[2]
remain[3] <= lpm_divide_8os:auto_generated.remain[3]


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
clock => ~NO_FANOUT~
denom[0] => sign_div_unsign_akh:divider.denominator[0]
denom[1] => sign_div_unsign_akh:divider.denominator[1]
denom[2] => sign_div_unsign_akh:divider.denominator[2]
denom[3] => sign_div_unsign_akh:divider.denominator[3]
numer[0] => sign_div_unsign_akh:divider.numerator[0]
numer[1] => sign_div_unsign_akh:divider.numerator[1]
numer[2] => sign_div_unsign_akh:divider.numerator[2]
numer[3] => sign_div_unsign_akh:divider.numerator[3]
numer[4] => sign_div_unsign_akh:divider.numerator[4]
numer[5] => sign_div_unsign_akh:divider.numerator[5]
numer[6] => sign_div_unsign_akh:divider.numerator[6]
quotient[0] <= sign_div_unsign_akh:divider.quotient[0]
quotient[1] <= sign_div_unsign_akh:divider.quotient[1]
quotient[2] <= sign_div_unsign_akh:divider.quotient[2]
quotient[3] <= sign_div_unsign_akh:divider.quotient[3]
quotient[4] <= sign_div_unsign_akh:divider.quotient[4]
quotient[5] <= sign_div_unsign_akh:divider.quotient[5]
quotient[6] <= sign_div_unsign_akh:divider.quotient[6]
remain[0] <= sign_div_unsign_akh:divider.remainder[0]
remain[1] <= sign_div_unsign_akh:divider.remainder[1]
remain[2] <= sign_div_unsign_akh:divider.remainder[2]
remain[3] <= sign_div_unsign_akh:divider.remainder[3]


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider
denominator[0] => alt_u_div_84f:divider.denominator[0]
denominator[1] => alt_u_div_84f:divider.denominator[1]
denominator[2] => alt_u_div_84f:divider.denominator[2]
denominator[3] => alt_u_div_84f:divider.denominator[3]
numerator[0] => alt_u_div_84f:divider.numerator[0]
numerator[1] => alt_u_div_84f:divider.numerator[1]
numerator[2] => alt_u_div_84f:divider.numerator[2]
numerator[3] => alt_u_div_84f:divider.numerator[3]
numerator[4] => alt_u_div_84f:divider.numerator[4]
numerator[5] => alt_u_div_84f:divider.numerator[5]
numerator[6] => alt_u_div_84f:divider.numerator[6]
quotient[0] <= protect_quotient[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= protect_quotient[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= protect_quotient[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= protect_quotient[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= protect_quotient[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= protect_quotient[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= protect_quotient[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= protect_remainder[0].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= protect_remainder[1].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= protect_remainder[2].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= protect_remainder[3].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider
denominator[0] => add_sub_7pc:add_sub_0.datab[0]
denominator[0] => add_sub_8pc:add_sub_1.datab[0]
denominator[0] => op_1.IN8
denominator[0] => op_2.IN10
denominator[0] => op_3.IN12
denominator[0] => op_4.IN12
denominator[0] => op_5.IN12
denominator[1] => sel[0].IN1
denominator[1] => add_sub_8pc:add_sub_1.datab[1]
denominator[1] => sel[4].IN1
denominator[1] => sel[8].IN1
denominator[1] => op_1.IN6
denominator[1] => sel[12].IN1
denominator[1] => op_2.IN8
denominator[1] => sel[16].IN1
denominator[1] => op_3.IN10
denominator[1] => sel[20].IN1
denominator[1] => op_4.IN10
denominator[1] => sel[24].IN1
denominator[1] => op_5.IN10
denominator[1] => sel[28].IN1
denominator[2] => sel[1].IN1
denominator[2] => sel[5].IN1
denominator[2] => sel[9].IN1
denominator[2] => op_1.IN4
denominator[2] => sel[13].IN1
denominator[2] => op_2.IN6
denominator[2] => sel[17].IN1
denominator[2] => op_3.IN8
denominator[2] => sel[21].IN1
denominator[2] => op_4.IN8
denominator[2] => sel[25].IN1
denominator[2] => op_5.IN8
denominator[2] => sel[29].IN1
denominator[3] => sel[2].IN1
denominator[3] => sel[6].IN1
denominator[3] => sel[10].IN1
denominator[3] => sel[14].IN1
denominator[3] => op_2.IN4
denominator[3] => sel[18].IN1
denominator[3] => op_3.IN6
denominator[3] => sel[22].IN1
denominator[3] => op_4.IN6
denominator[3] => sel[26].IN1
denominator[3] => op_5.IN6
denominator[3] => sel[30].IN1
numerator[0] => StageOut[30].IN0
numerator[0] => op_5.IN11
numerator[1] => StageOut[25].IN0
numerator[1] => op_4.IN11
numerator[2] => StageOut[20].IN0
numerator[2] => op_3.IN11
numerator[3] => StageOut[15].IN0
numerator[3] => op_2.IN9
numerator[4] => StageOut[10].IN0
numerator[4] => op_1.IN7
numerator[5] => add_sub_8pc:add_sub_1.dataa[0]
numerator[5] => StageOut[5].IN0
numerator[6] => add_sub_7pc:add_sub_0.dataa[0]
numerator[6] => StageOut[0].IN0
quotient[0] <= quotient_tmp[0].DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient_tmp[1].DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient_tmp[2].DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient_tmp[3].DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient_tmp[4].DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient_tmp[5].DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient_tmp[6].DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= StageOut[30].DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= StageOut[31].DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= StageOut[32].DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= StageOut[33].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_7pc:add_sub_0
cout <= carry_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
datab[0] => datab_node[0].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|MusicUnit:comb_10|BCDSpliter:comb_6|DIV:comb_3|lpm_divide:LPM_DIVIDE_component|lpm_divide_8os:auto_generated|sign_div_unsign_akh:divider|alt_u_div_84f:divider|add_sub_8pc:add_sub_1
cout <= carry_eqn[1].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => carry_eqn[0].IN0
dataa[0] => _.IN0
dataa[0] => sum_eqn[0].IN0
dataa[1] => carry_eqn[1].IN0
dataa[1] => _.IN0
dataa[1] => sum_eqn[1].IN0
datab[0] => datab_node[0].IN0
datab[1] => datab_node[1].IN0
result[0] <= sum_eqn[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= sum_eqn[1].DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|FreqChange:comb_11
clk_in => clk.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_in => counter[30].CLK
clk_in => counter[31].CLK
clk_out <= clk.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|BCD4Sweeper:comb_12
CLK => O[0]~reg0.CLK
CLK => O[1]~reg0.CLK
CLK => O[2]~reg0.CLK
CLK => O[3]~reg0.CLK
CLK => COM[0]~reg0.CLK
CLK => COM[1]~reg0.CLK
CLK => COM[2]~reg0.CLK
CLK => COM[3]~reg0.CLK
I3[0] => Mux3.IN4
I3[1] => Mux2.IN4
I3[2] => Mux1.IN4
I3[3] => Mux0.IN4
I2[0] => Mux3.IN5
I2[1] => Mux2.IN5
I2[2] => Mux1.IN5
I2[3] => Mux0.IN5
I1[0] => Mux3.IN6
I1[1] => Mux2.IN6
I1[2] => Mux1.IN6
I1[3] => Mux0.IN6
I0[0] => Mux3.IN7
I0[1] => Mux2.IN7
I0[2] => Mux1.IN7
I0[3] => Mux0.IN7
O[0] <= O[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
O[1] <= O[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
O[2] <= O[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
O[3] <= O[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
COM[0] <= COM[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
COM[1] <= COM[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
COM[2] <= COM[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
COM[3] <= COM[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MyPianoPro|BCD2LED:comb_13
BCD[0] => Decoder0.IN3
BCD[1] => Decoder0.IN2
BCD[2] => Decoder0.IN1
BCD[3] => Decoder0.IN0
LED[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
LED[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


